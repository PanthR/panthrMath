var main = require('..');
var chai = require('chai');
var expect = chai.expect;
var utils = require('../panthrMath/utils');

var precision = 1e-8;

   /* Rcode generating the tests:
      options(digits = 20)
      x = 0.5 * exp(-6:4)
      a = exp(-6:6)
      as = rep(a, each = length(x))
      xs = rep(x, length(a))
      xs2 = signif(xs, digits=15)
      as2 = signif(as, digits=15)

      exps2 = dexp(xs2, as2, log = TRUE)
      ps2 = pexp(xs2, as2, lower.tail = TRUE, log.p=TRUE)
      qs2 = pexp(xs2, as2, lower.tail = FALSE, log.p=TRUE)
      xs2 = formatC(xs2, digits=15, format="g")
      as2 = formatC(as2, digits=15, format="g")
      ps2 = formatC(ps2, digits=15, format="g")
      qs2 = formatC(qs2, digits=15, format="g")

      s = paste(xs2, as2, exps2, sep=", ", collapse="],\n[")
      s = paste("[", s, "]", sep="")

      s2 = paste(xs2, as2, ps2, qs2, sep=", ", collapse="],\n[")
      s2 = paste("[", s2, "]", sep="")
    */
describe('Exponential Distribution', function() {
   it('dexp', function() {
      [
      [0.00123937608833318, 0.00247875217666636, -6.00000307210618],
      [0.00336897349954273, 0.00247875217666636, -6.00000835085039],
      [0.00915781944436709, 0.00247875217666636, -6.00002269996488],
      [0.024893534183932, 0.00247875217666636, -6.00006170490204],
      [0.0676676416183064, 0.00247875217666636, -6.00016773131395],
      [0.183939720585721, 0.00247875217666636, -6.00045594098278],
      [             0.5, 0.00247875217666636, -6.00123937608833],
      [1.35914091422952, 0.00247875217666636, -6.00336897349954],
      [3.69452804946532, 0.00247875217666636, -6.00915781944437],
      [10.0427684615938, 0.00247875217666636, -6.02489353418393],
      [27.2990750165721, 0.00247875217666636, -6.06766764161831],
      [0.00123937608833318, 0.00673794699908547, -5.0000083508504],
      [0.00336897349954273, 0.00673794699908547, -5.00002269996488],
      [0.00915781944436709, 0.00673794699908547, -5.00006170490204],
      [0.024893534183932, 0.00673794699908547, -5.00016773131395],
      [0.0676676416183064, 0.00673794699908547, -5.00045594098278],
      [0.183939720585721, 0.00673794699908547, -5.00123937608833],
      [             0.5, 0.00673794699908547, -5.00336897349954],
      [1.35914091422952, 0.00673794699908547, -5.00915781944437],
      [3.69452804946532, 0.00673794699908547, -5.02489353418393],
      [10.0427684615938, 0.00673794699908547, -5.06766764161831],
      [27.2990750165721, 0.00673794699908547, -5.18393972058572],
      [0.00123937608833318, 0.0183156388887342, -4.00002269996488],
      [0.00336897349954273, 0.0183156388887342, -4.00006170490204],
      [0.00915781944436709, 0.0183156388887342, -4.00016773131395],
      [0.024893534183932, 0.0183156388887342, -4.00045594098278],
      [0.0676676416183064, 0.0183156388887342, -4.00123937608833],
      [0.183939720585721, 0.0183156388887342, -4.00336897349954],
      [             0.5, 0.0183156388887342, -4.00915781944437],
      [1.35914091422952, 0.0183156388887342, -4.02489353418393],
      [3.69452804946532, 0.0183156388887342, -4.06766764161831],
      [10.0427684615938, 0.0183156388887342, -4.18393972058572],
      [27.2990750165721, 0.0183156388887342, -4.5],
      [0.00123937608833318, 0.0497870683678639, -3.00006170490204],
      [0.00336897349954273, 0.0497870683678639, -3.00016773131395],
      [0.00915781944436709, 0.0497870683678639, -3.00045594098278],
      [0.024893534183932, 0.0497870683678639, -3.00123937608833],
      [0.0676676416183064, 0.0497870683678639, -3.00336897349954],
      [0.183939720585721, 0.0497870683678639, -3.00915781944437],
      [             0.5, 0.0497870683678639, -3.02489353418393],
      [1.35914091422952, 0.0497870683678639, -3.06766764161831],
      [3.69452804946532, 0.0497870683678639, -3.18393972058572],
      [10.0427684615938, 0.0497870683678639, -3.5],
      [27.2990750165721, 0.0497870683678639, -4.35914091422952],
      [0.00123937608833318, 0.135335283236613, -2.00016773131395],
      [0.00336897349954273, 0.135335283236613, -2.00045594098277],
      [0.00915781944436709, 0.135335283236613, -2.00123937608833],
      [0.024893534183932, 0.135335283236613, -2.00336897349954],
      [0.0676676416183064, 0.135335283236613, -2.00915781944436],
      [0.183939720585721, 0.135335283236613, -2.02489353418393],
      [             0.5, 0.135335283236613, -2.0676676416183],
      [1.35914091422952, 0.135335283236613, -2.18393972058572],
      [3.69452804946532, 0.135335283236613, -2.5],
      [10.0427684615938, 0.135335283236613, -3.35914091422952],
      [27.2990750165721, 0.135335283236613, -5.69452804946533],
      [0.00123937608833318, 0.367879441171442, -1.00045594098278],
      [0.00336897349954273, 0.367879441171442, -1.00123937608833],
      [0.00915781944436709, 0.367879441171442, -1.00336897349954],
      [0.024893534183932, 0.367879441171442, -1.00915781944437],
      [0.0676676416183064, 0.367879441171442, -1.02489353418393],
      [0.183939720585721, 0.367879441171442, -1.06766764161831],
      [             0.5, 0.367879441171442, -1.18393972058572],
      [1.35914091422952, 0.367879441171442, -1.5],
      [3.69452804946532, 0.367879441171442, -2.35914091422952],
      [10.0427684615938, 0.367879441171442, -4.69452804946531],
      [27.2990750165721, 0.367879441171442, -11.0427684615938],
      [0.00123937608833318,                1, -0.00123937608833318],
      [0.00336897349954273,                1, -0.00336897349954273],
      [0.00915781944436709,                1, -0.00915781944436709],
      [0.024893534183932,                1, -0.024893534183932],
      [0.0676676416183064,                1, -0.0676676416183064],
      [0.183939720585721,                1, -0.183939720585721],
      [             0.5,                1, -0.5],
      [1.35914091422952,                1, -1.35914091422952],
      [3.69452804946532,                1, -3.69452804946532],
      [10.0427684615938,                1, -10.0427684615938],
      [27.2990750165721,                1, -27.2990750165721],
      [0.00123937608833318, 2.71828182845904, 0.996631026500455],
      [0.00336897349954273, 2.71828182845904, 0.990842180555631],
      [0.00915781944436709, 2.71828182845904, 0.975106465816066],
      [0.024893534183932, 2.71828182845904, 0.932332358381692],
      [0.0676676416183064, 2.71828182845904, 0.816060279414277],
      [0.183939720585721, 2.71828182845904, 0.499999999999999],
      [             0.5, 2.71828182845904, -0.359140914229522],
      [1.35914091422952, 2.71828182845904, -2.69452804946531],
      [3.69452804946532, 2.71828182845904, -9.0427684615938],
      [10.0427684615938, 2.71828182845904, -26.299075016572],
      [27.2990750165721, 2.71828182845904, -73.2065795512881],
      [0.00123937608833318, 7.38905609893065, 1.99084218055563],
      [0.00336897349954273, 7.38905609893065, 1.97510646581607],
      [0.00915781944436709, 7.38905609893065, 1.93233235838169],
      [0.024893534183932, 7.38905609893065, 1.81606027941428],
      [0.0676676416183064, 7.38905609893065, 1.5],
      [0.183939720585721, 7.38905609893065, 0.640859085770479],
      [             0.5, 7.38905609893065, -1.69452804946532],
      [1.35914091422952, 7.38905609893065, -8.04276846159381],
      [3.69452804946532, 7.38905609893065, -25.2990750165721],
      [10.0427684615938, 7.38905609893065, -72.206579551288],
      [27.2990750165721, 7.38905609893065, -199.714396746367],
      [0.00123937608833318, 20.0855369231877, 2.97510646581607],
      [0.00336897349954273, 20.0855369231877, 2.9323323583817],
      [0.00915781944436709, 20.0855369231877, 2.81606027941428],
      [0.024893534183932, 20.0855369231877, 2.5],
      [0.0676676416183064, 20.0855369231877, 1.64085908577048],
      [0.183939720585721, 20.0855369231877, -0.694528049465326],
      [             0.5, 20.0855369231877, -7.04276846159385],
      [1.35914091422952, 20.0855369231877, -24.2990750165721],
      [3.69452804946532, 20.0855369231877, -71.2065795512883],
      [10.0427684615938, 20.0855369231877, -198.714396746367],
      [27.2990750165721, 20.0855369231877, -545.31657921423],
      [0.00123937608833318, 54.5981500331442, 3.93233235838169],
      [0.00336897349954273, 54.5981500331442, 3.81606027941428],
      [0.00915781944436709, 54.5981500331442, 3.5],
      [0.024893534183932, 54.5981500331442, 2.64085908577048],
      [0.0676676416183064, 54.5981500331442, 0.305471950534673],
      [0.183939720585721, 54.5981500331442, -6.04276846159382],
      [             0.5, 54.5981500331442, -23.2990750165721],
      [1.35914091422952, 54.5981500331442, -70.2065795512881],
      [3.69452804946532, 54.5981500331442, -197.714396746367],
      [10.0427684615938, 54.5981500331442, -544.316579214227],
      [27.2990750165721, 54.5981500331442, -1486.47899352086],
      [0.00123937608833318, 148.413159102577, 4.81606027941428],
      [0.00336897349954273, 148.413159102577, 4.5],
      [0.00915781944436709, 148.413159102577, 3.64085908577048],
      [0.024893534183932, 148.413159102577, 1.30547195053466],
      [0.0676676416183064, 148.413159102577, -5.04276846159387],
      [0.183939720585721, 148.413159102577, -22.2990750165722],
      [             0.5, 148.413159102577, -69.2065795512885],
      [1.35914091422952, 148.413159102577, -196.714396746368],
      [3.69452804946532, 148.413159102577, -543.31657921423],
      [10.0427684615938, 148.413159102577, -1485.47899352086],
      [27.2990750165721, 148.413159102577, -4046.5419637877],
      [0.00123937608833318, 403.428793492735, 5.5],
      [0.00336897349954273, 403.428793492735, 4.64085908577048],
      [0.00915781944436709, 403.428793492735, 2.30547195053468],
      [0.024893534183932, 403.428793492735, -4.04276846159384],
      [0.0676676416183064, 403.428793492735, -21.2990750165721],
      [0.183939720585721, 403.428793492735, -68.2065795512882],
      [             0.5, 403.428793492735, -195.714396746367],
      [1.35914091422952, 403.428793492735, -542.316579214228],
      [3.69452804946532, 403.428793492735, -1484.47899352086],
      [10.0427684615938, 403.428793492735, -4045.54196378768],
      [27.2990750165721, 403.428793492735, -11007.2328974033]
      ].forEach(function(tuple) {
         var x, a, logp, rlogp;
         x = tuple[0];
         a = tuple[1];
         rlogp = tuple[2];
         logp = main.dexp(a, true)(x);
         expect(utils.relativelyCloseTo(rlogp, logp, precision)).to.be.ok;
      });
   });

   it('pexp and qexp', function() {
      [
      [0.00123937608833318, 0.00247875217666636, -12.6931487166126, -3.07210617666411e-06],
      [0.00336897349954273, 0.00247875217666636, -11.6931513559822, -8.35085039512283e-06],
      [0.00915781944436709, 0.00247875217666636, -10.6931585305209, -2.26999648812424e-05],
      [0.024893534183932, 0.00247875217666636, -9.69317803285232, -6.17049020433399e-05],
      [0.0676676416183064, 0.00247875217666636, -8.69323104504468, -0.000167731313951256],
      [0.183939720585721, 0.00247875217666636, -7.69337514238958, -0.000455940982777258],
      [             0.5, 0.00247875217666636, -6.6937668046019, -0.00123937608833318],
      [1.35914091422952, 0.00247875217666636, -5.69483119439383, -0.00336897349954273],
      [3.69452804946532, 0.00247875217666636, -4.6977225958822, -0.00915781944436708],
      [10.0427684615938, 0.00247875217666636, -3.70556812745008, -0.0248935341839319],
      [27.2990750165721, 0.00247875217666636, -2.72679022074348, -0.0676676416183063],
      [0.00123937608833318, 0.00673794699908547, -11.6931513559822, -8.35085039512284e-06],
      [0.00336897349954273, 0.00673794699908547, -10.6931585305209, -2.26999648812424e-05],
      [0.00915781944436709, 0.00673794699908547, -9.69317803285232, -6.17049020433398e-05],
      [0.024893534183932, 0.00673794699908547, -8.69323104504468, -0.000167731313951256],
      [0.0676676416183064, 0.00673794699908547, -7.69337514238958, -0.000455940982777259],
      [0.183939720585721, 0.00673794699908547, -6.6937668046019, -0.00123937608833318],
      [             0.5, 0.00673794699908547, -5.69483119439383, -0.00336897349954273],
      [1.35914091422952, 0.00673794699908547, -4.6977225958822, -0.00915781944436708],
      [3.69452804946532, 0.00673794699908547, -3.70556812745008, -0.0248935341839319],
      [10.0427684615938, 0.00673794699908547, -2.72679022074349, -0.0676676416183061],
      [27.2990750165721, 0.00673794699908547, -1.78370769558057, -0.183939720585721],
      [0.00123937608833318, 0.0183156388887342, -10.6931585305209, -2.26999648812425e-05],
      [0.00336897349954273, 0.0183156388887342, -9.69317803285232, -6.17049020433398e-05],
      [0.00915781944436709, 0.0183156388887342, -8.69323104504468, -0.000167731313951256],
      [0.024893534183932, 0.0183156388887342, -7.69337514238957, -0.000455940982777259],
      [0.0676676416183064, 0.0183156388887342, -6.6937668046019, -0.00123937608833318],
      [0.183939720585721, 0.0183156388887342, -5.69483119439383, -0.00336897349954273],
      [             0.5, 0.0183156388887342, -4.6977225958822, -0.0091578194443671],
      [1.35914091422952, 0.0183156388887342, -3.70556812745008, -0.024893534183932],
      [3.69452804946532, 0.0183156388887342, -2.72679022074348, -0.0676676416183063],
      [10.0427684615938, 0.0183156388887342, -1.78370769558057, -0.183939720585721],
      [27.2990750165721, 0.0183156388887342, -0.932752129567188,             -0.5],
      [0.00123937608833318, 0.0497870683678639, -9.69317803285232, -6.17049020433398e-05],
      [0.00336897349954273, 0.0497870683678639, -8.69323104504468, -0.000167731313951256],
      [0.00915781944436709, 0.0497870683678639, -7.69337514238958, -0.000455940982777258],
      [0.024893534183932, 0.0497870683678639, -6.6937668046019, -0.00123937608833318],
      [0.0676676416183064, 0.0497870683678639, -5.69483119439383, -0.00336897349954273],
      [0.183939720585721, 0.0497870683678639, -4.6977225958822, -0.00915781944436707],
      [             0.5, 0.0497870683678639, -3.70556812745008, -0.0248935341839319],
      [1.35914091422952, 0.0497870683678639, -2.72679022074349, -0.0676676416183062],
      [3.69452804946532, 0.0497870683678639, -1.78370769558057, -0.183939720585721],
      [10.0427684615938, 0.0497870683678639, -0.932752129567192, -0.499999999999998],
      [27.2990750165721, 0.0497870683678639, -0.296899577176428, -1.35914091422952],
      [0.00123937608833318, 0.135335283236613, -8.69323104504468, -0.000167731313951256],
      [0.00336897349954273, 0.135335283236613, -7.69337514238958, -0.000455940982777259],
      [0.00915781944436709, 0.135335283236613, -6.6937668046019, -0.00123937608833318],
      [0.024893534183932, 0.135335283236613, -5.69483119439382, -0.00336897349954275],
      [0.0676676416183064, 0.135335283236613, -4.69772259588219, -0.00915781944436712],
      [0.183939720585721, 0.135335283236613, -3.70556812745007, -0.024893534183932],
      [             0.5, 0.135335283236613, -2.72679022074348, -0.0676676416183065],
      [1.35914091422952, 0.135335283236613, -1.78370769558057, -0.183939720585721],
      [3.69452804946532, 0.135335283236613, -0.932752129567188,             -0.5],
      [10.0427684615938, 0.135335283236613, -0.296899577176427, -1.35914091422952],
      [27.2990750165721, 0.135335283236613, -0.0251733909249292, -3.69452804946533],
      [0.00123937608833318, 0.367879441171442, -7.69337514238958, -0.000455940982777258],
      [0.00336897349954273, 0.367879441171442, -6.6937668046019, -0.00123937608833318],
      [0.00915781944436709, 0.367879441171442, -5.69483119439383, -0.00336897349954273],
      [0.024893534183932, 0.367879441171442, -4.6977225958822, -0.00915781944436709],
      [0.0676676416183064, 0.367879441171442, -3.70556812745007, -0.024893534183932],
      [0.183939720585721, 0.367879441171442, -2.72679022074349, -0.0676676416183062],
      [             0.5, 0.367879441171442, -1.78370769558057, -0.183939720585721],
      [1.35914091422952, 0.367879441171442, -0.932752129567191, -0.499999999999999],
      [3.69452804946532, 0.367879441171442, -0.296899577176428, -1.35914091422952],
      [10.0427684615938, 0.367879441171442, -0.0251733909249298, -3.69452804946531],
      [27.2990750165721, 0.367879441171442, -4.35001265095039e-05, -10.0427684615938],
      [0.00123937608833318,                1, -6.6937668046019, -0.00123937608833318],
      [0.00336897349954273,                1, -5.69483119439383, -0.00336897349954273],
      [0.00915781944436709,                1, -4.6977225958822, -0.00915781944436709],
      [0.024893534183932,                1, -3.70556812745007, -0.024893534183932],
      [0.0676676416183064,                1, -2.72679022074348, -0.0676676416183064],
      [0.183939720585721,                1, -1.78370769558057, -0.183939720585721],
      [             0.5,                1, -0.932752129567189,             -0.5],
      [1.35914091422952,                1, -0.296899577176428, -1.35914091422952],
      [3.69452804946532,                1, -0.0251733909249295, -3.69452804946532],
      [10.0427684615938,                1, -4.35001265095047e-05, -10.0427684615938],
      [27.2990750165721,                1, -1.39367772636258e-12, -27.2990750165721],
      [0.00123937608833318, 2.71828182845904, -5.69483119439383, -0.00336897349954273],
      [0.00336897349954273, 2.71828182845904, -4.6977225958822, -0.00915781944436706],
      [0.00915781944436709, 2.71828182845904, -3.70556812745008, -0.0248935341839319],
      [0.024893534183932, 2.71828182845904, -2.72679022074348, -0.0676676416183063],
      [0.0676676416183064, 2.71828182845904, -1.78370769558057, -0.183939720585721],
      [0.183939720585721, 2.71828182845904, -0.932752129567191, -0.499999999999999],
      [             0.5, 2.71828182845904, -0.296899577176428, -1.35914091422952],
      [1.35914091422952, 2.71828182845904, -0.0251733909249297, -3.69452804946531],
      [3.69452804946532, 2.71828182845904, -4.35001265095046e-05, -10.0427684615938],
      [10.0427684615938, 2.71828182845904, -1.39367772636276e-12, -27.299075016572],
      [27.2990750165721, 2.71828182845904, -5.92232150129148e-33, -74.2065795512881],
      [0.00123937608833318, 7.38905609893065, -4.6977225958822, -0.00915781944436709],
      [0.00336897349954273, 7.38905609893065, -3.70556812745008, -0.0248935341839319],
      [0.00915781944436709, 7.38905609893065, -2.72679022074348, -0.0676676416183063],
      [0.024893534183932, 7.38905609893065, -1.78370769558057, -0.183939720585721],
      [0.0676676416183064, 7.38905609893065, -0.932752129567188,             -0.5],
      [0.183939720585721, 7.38905609893065, -0.296899577176427, -1.35914091422952],
      [             0.5, 7.38905609893065, -0.0251733909249294, -3.69452804946532],
      [1.35914091422952, 7.38905609893065, -4.3500126509504e-05, -10.0427684615938],
      [3.69452804946532, 7.38905609893065, -1.39367772636261e-12, -27.2990750165721],
      [10.0427684615938, 7.38905609893065, -5.9223215012919e-33, -74.206579551288],
      [27.2990750165721, 7.38905609893065, -2.49201454381147e-88, -201.714396746367],
      [0.00123937608833318, 20.0855369231877, -3.70556812745007, -0.024893534183932],
      [0.00336897349954273, 20.0855369231877, -2.72679022074348, -0.0676676416183064],
      [0.00915781944436709, 20.0855369231877, -1.78370769558057, -0.183939720585721],
      [0.024893534183932, 20.0855369231877, -0.932752129567186, -0.500000000000001],
      [0.0676676416183064, 20.0855369231877, -0.296899577176426, -1.35914091422953],
      [0.183939720585721, 20.0855369231877, -0.0251733909249293, -3.69452804946533],
      [             0.5, 20.0855369231877, -4.35001265095025e-05, -10.0427684615938],
      [1.35914091422952, 20.0855369231877, -1.39367772636256e-12, -27.2990750165721],
      [3.69452804946532, 20.0855369231877, -5.9223215012903e-33, -74.2065795512883],
      [10.0427684615938, 20.0855369231877, -2.49201454381197e-88, -201.714396746367],
      [27.2990750165721, 20.0855369231877, -7.39835746473263e-239, -548.31657921423],
      [0.00123937608833318, 54.5981500331442, -2.72679022074348, -0.0676676416183063],
      [0.00336897349954273, 54.5981500331442, -1.78370769558057, -0.183939720585721],
      [0.00915781944436709, 54.5981500331442, -0.932752129567189,             -0.5],
      [0.024893534183932, 54.5981500331442, -0.296899577176427, -1.35914091422952],
      [0.0676676416183064, 54.5981500331442, -0.0251733909249293, -3.69452804946533],
      [0.183939720585721, 54.5981500331442, -4.35001265095039e-05, -10.0427684615938],
      [             0.5, 54.5981500331442, -1.39367772636258e-12, -27.2990750165721],
      [1.35914091422952, 54.5981500331442, -5.92232150129148e-33, -74.2065795512881],
      [3.69452804946532, 54.5981500331442, -2.49201454381218e-88, -201.714396746367],
      [10.0427684615938, 54.5981500331442, -7.39835746475282e-239, -548.316579214227],
      [27.2990750165721, 54.5981500331442,               -0, -1490.47899352086],
      [0.00123937608833318, 148.413159102577, -1.78370769558056, -0.183939720585722],
      [0.00336897349954273, 148.413159102577, -0.932752129567187, -0.500000000000001],
      [0.00915781944436709, 148.413159102577, -0.296899577176426, -1.35914091422953],
      [0.024893534183932, 148.413159102577, -0.025173390924929, -3.69452804946534],
      [0.0676676416183064, 148.413159102577, -4.35001265095017e-05, -10.0427684615939],
      [0.183939720585721, 148.413159102577, -1.39367772636249e-12, -27.2990750165722],
      [             0.5, 148.413159102577, -5.9223215012892e-33, -74.2065795512885],
      [1.35914091422952, 148.413159102577, -2.4920145438107e-88, -201.714396746368],
      [3.69452804946532, 148.413159102577, -7.39835746473095e-239, -548.31657921423],
      [10.0427684615938, 148.413159102577,               -0, -1490.47899352086],
      [27.2990750165721, 148.413159102577,               -0, -4051.5419637877],
      [0.00123937608833318, 403.428793492735, -0.932752129567188,             -0.5],
      [0.00336897349954273, 403.428793492735, -0.296899577176428, -1.35914091422952],
      [0.00915781944436709, 403.428793492735, -0.0251733909249294, -3.69452804946532],
      [0.024893534183932, 403.428793492735, -4.35001265095029e-05, -10.0427684615938],
      [0.0676676416183064, 403.428793492735, -1.39367772636254e-12, -27.2990750165721],
      [0.183939720585721, 403.428793492735, -5.92232150129089e-33, -74.2065795512882],
      [             0.5, 403.428793492735, -2.49201454381126e-88, -201.714396746367],
      [1.35914091422952, 403.428793492735, -7.39835746474525e-239, -548.316579214228],
      [3.69452804946532, 403.428793492735,               -0, -1490.47899352086],
      [10.0427684615938, 403.428793492735,               -0, -4051.54196378768],
      [27.2990750165721, 403.428793492735,               -0, -11013.2328974033]
      ].forEach(function(tuple) {
         var x, a, logp, rlogp, rlogq, xfromqexp;
         x = tuple[0];
         a = tuple[1];
         rlogp = tuple[2];
         rlogq = tuple[3];
         logp = main.pexp(a, true, true)(x);
         if (!utils.isEssentiallyZero(rlogp) && !utils.isEssentiallyZero(rlogq)) {
            expect(utils.relativelyCloseTo(rlogp, logp, precision)).to.be.ok;
            expect(utils.relativelyCloseTo(Math.exp(rlogp),
               main.pexp(a)(x), precision)).to.be.ok;
            expect(utils.relativelyCloseTo(rlogq,
               main.pexp(a, false, true)(x), precision)).to.be.ok;
            expect(utils.relativelyCloseTo(Math.exp(rlogq),
               main.pexp(a, false)(x), precision)).to.be.ok;
            xfromqexp = main.qexp(a, true, true)(logp);
            expect(utils.relativelyCloseTo(xfromqexp, x, precision)).to.be.ok;
            xfromqexp = main.qexp(a, false, true)(rlogq);
            expect(utils.relativelyCloseTo(xfromqexp, x, precision)).to.be.ok;
         }
      });
   });

   it('is also exported as an object', function() {
      var o;
      o = main.expdistr(.1);
      ['d', 'p', 'q', 'r'].forEach(function(s) {
         expect(o).to.respondTo(s);
         if (s !== 'r') {
            expect(o[s](.2)).to.equal(main[s + 'exp'](.1)(.2));
         }
      });
   });
   /* Rcode generating the tests:
      options(digits = 20)
      x = c(NaN, -Inf, -1.3, 0, 1, 2, 1.5, Inf)
      rate = c(NaN, -Inf, -1.3, 0, 1.5, Inf)
      g = expand.grid(x=x, rate=rate)
      g$d = dexp(g$x, g$rate, log=TRUE)
      g$p = pexp(g$x, g$rate, log.p=TRUE)
      g$q = pexp(g$x, g$rate, lower.tail=FALSE, log.p=TRUE)
      s = paste(g$x, g$rate, g$d, g$p, g$q, sep=", ", collapse="],\n[")
      s = paste("[", s, "]", sep="")
   */
   it('pexp, dexp handle inappropriate inputs', function() {
      [
      [NaN, NaN, NaN, NaN, NaN],
      [-Infinity, NaN, NaN, NaN, NaN],
      [-1.3, NaN, NaN, NaN, NaN],
      [0, NaN, NaN, NaN, NaN],
      [1, NaN, NaN, NaN, NaN],
      [2, NaN, NaN, NaN, NaN],
      [1.5, NaN, NaN, NaN, NaN],
      [Infinity, NaN, NaN, NaN, NaN],
      [NaN, -Infinity, NaN, NaN, NaN],
      [-Infinity, -Infinity, NaN, -Infinity, 0],
      [-1.3, -Infinity, NaN, -Infinity, 0],
      [0, -Infinity, NaN, -Infinity, 0],
      [1, -Infinity, NaN, NaN, Infinity],
      [2, -Infinity, NaN, NaN, Infinity],
      [1.5, -Infinity, NaN, NaN, Infinity],
      [Infinity, -Infinity, NaN, NaN, Infinity],
      [NaN, -1.3, NaN, NaN, NaN],
      [-Infinity, -1.3, NaN, NaN, NaN],
      [-1.3, -1.3, NaN, NaN, NaN],
      [0, -1.3, NaN, NaN, NaN],
      [1, -1.3, NaN, NaN, NaN],
      [2, -1.3, NaN, NaN, NaN],
      [1.5, -1.3, NaN, NaN, NaN],
      [Infinity, -1.3, NaN, NaN, NaN],
      [NaN, 0, NaN, NaN, NaN],
      [-Infinity, 0, -Infinity, -Infinity, 0],
      [-1.3, 0, -Infinity, -Infinity, 0],
      [0, 0, -Infinity, -Infinity, 0],
      [1, 0, -Infinity, -Infinity, 0],
      [2, 0, -Infinity, -Infinity, 0],
      [1.5, 0, -Infinity, -Infinity, 0],
      [Infinity, 0, NaN, NaN, NaN],
      [NaN, 1.5, NaN, NaN, NaN],
      [-Infinity, 1.5, -Infinity, -Infinity, 0],
      [-1.3, 1.5, -Infinity, -Infinity, 0],
      [0, 1.5, 0.405465108108164, -Infinity, 0],
      [1, 1.5, -1.09453489189184, -0.252482458925454, -1.5],
      [2, 1.5, -2.59453489189184, -0.0510691809427016, -3],
      [1.5, 1.5, -1.84453489189184, -0.111377721185044, -2.25],
      [Infinity, 1.5, -Infinity, 0, -Infinity],
      [NaN, Infinity, NaN, NaN, NaN],
      [-Infinity, Infinity, NaN, -Infinity, 0],
      [-1.3, Infinity, NaN, -Infinity, 0],
      [0, Infinity, NaN, -Infinity, 0],
      [1, Infinity, NaN, 0, -Infinity],
      [2, Infinity, NaN, 0, -Infinity],
      [1.5, Infinity, NaN, 0, -Infinity],
      [Infinity, Infinity, NaN, 0, -Infinity]
      ].forEach(function(tuple) {
         var x, rate, rlogp, rlogq, rlogd, logp, logq, logd;
         x = tuple[0];
         rate = tuple[1];
         rlogd = tuple[2];
         rlogp = tuple[3];
         rlogq = tuple[4];
         logd = main.dexp(rate, true)(x);
         logp = main.pexp(rate, true, true)(x);
         logq = main.pexp(rate, false, true)(x);
         expect(utils.relativelyCloseTo(logd, rlogd)).to.equal(true);
         expect(utils.relativelyCloseTo(logp, rlogp)).to.equal(true);
         expect(utils.relativelyCloseTo(logq, rlogq)).to.equal(true);
      });
   });

   /* Rcode generating the tests:
      options(digits = 20)
      p = c(NaN, -Inf, -1, 0, 0.3, 1, Inf)
      rate = c(NaN, -1.3, 0, 1.5)
      g = expand.grid(p=p, rate=rate)
      g$x1 = qexp(g$p, g$rate, lower.tail=TRUE, log.p=FALSE)
      g$x2 = qexp(g$p, g$rate, lower.tail=FALSE, log.p=FALSE)
      s = paste(g$p, g$rate, g$x1, g$x2, sep=", ", collapse="],\n[")
      s = paste("[", s, "]", sep="")
      WARNING: WE HAVE MANUALLY CHANGED THE TEST:
      FOR p=0/1 and inappropriate rate, return 0/Infinity
      ALSO: TOOK OUT RATE = +/- INFINITY
   */
   it('qexp handles inappropriate inputs', function() {
      [
      [NaN, NaN, NaN, NaN],
      [-Infinity, NaN, NaN, NaN],
      [-1, NaN, NaN, NaN],
      [0, NaN, NaN, NaN],
      [0.3, NaN, NaN, NaN],
      [1, NaN, NaN, NaN],
      [Infinity, NaN, NaN, NaN],
      [NaN, -1.3, NaN, NaN],
      [-Infinity, -1.3, NaN, NaN],
      [-1, -1.3, NaN, NaN],
      [0, -1.3, 0, Infinity],
      [0.3, -1.3, NaN, NaN],
      [1, -1.3, Infinity, 0],
      [Infinity, -1.3, NaN, NaN],
      [NaN, 0, NaN, NaN],
      [-Infinity, 0, NaN, NaN],
      [-1, 0, NaN, NaN],
      [0, 0, 0, Infinity],
      [0.3, 0, Infinity, Infinity],
      [1, 0, Infinity, 0],
      [Infinity, 0, NaN, NaN],
      [NaN, 1.5, NaN, NaN],
      [-Infinity, 1.5, NaN, NaN],
      [-1, 1.5, NaN, NaN],
      [0, 1.5, 0, Infinity],
      [0.3, 1.5, 0.237783295959155, 0.802648536217291],
      [1, 1.5, Infinity, 0],
      [Infinity, 1.5, NaN, NaN],
      ].forEach(function(tuple) {
         var p, rate, x1r, x2r, x1, x2;
         p = tuple[0];
         rate = tuple[1];
         x1r = tuple[2];
         x2r = tuple[3];
         x1 = main.qexp(rate, true, false)(p);
         x2 = main.qexp(rate, false, false)(p);
         expect(utils.relativelyCloseTo(x1r, x1)).to.equal(true);
         expect(utils.relativelyCloseTo(x2r, x2)).to.equal(true);
      });
   });
});
